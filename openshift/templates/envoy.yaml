---
kind: Template
apiVersion: v1
labels:
  template: tracks-envoy-template
metadata:
  name: envoy-dc
  creationTimestamp:
parameters:
  - name: ENV_NAME
    displayName: Environment Name
    description: Environment Name
    required: true
  - name: CPU_REQUEST
    displayName: Requested CPU
    description: Requested CPU
    required: true
  - name: CPU_LIMIT
    displayName: CPU upper limit
    description: CPU upper limit
    required: true
  - name: MEMORY_REQUEST
    displayName: Requested memory
    description: Requested memory
    required: true
  - name: MEMORY_LIMIT
    displayName: Memory upper limit
    description: Memory upper limit
    required: true
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: tracks-envoy
      labels:
        name: tracks-envoy
        app: tracks
        env: ${ENV_NAME}
    spec:
      ports:
        - name: web-ingress
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        name: tracks-envoy
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      name: tracks-envoy
      labels:
        name: tracks-envoy
        app: tracks
        role: front-proxy
        env: ${ENV_NAME}
    spec:
      replicas: 1
      strategy:
        type: Recreate
      triggers:
        - type: ConfigChange
      test: false
      selector:
        name: tracks-envoy
      template:
        metadata:
          creationTimestamp:
          labels:
            name: tracks-envoy
        spec:
          containers:
            - name: envoy
              image: "envoyproxy/envoy:v1.12-latest"
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                request:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
              readinessProbe:
                tcpSocket:
                  port: 8080
                initialDelaySeconds: 20
                timeoutSeconds: 3
                periodSeconds: 30
                successThreshold: 1
                failureThreshold: 3
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities: {}
                privileged: false
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/envoy
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
          volumes:
            - name: config-volume
              configMap:
                name: envoy-config
                items:
                  - key: 'envoy-config.yaml'
                    path: 'envoy.yaml'
    status: {}
